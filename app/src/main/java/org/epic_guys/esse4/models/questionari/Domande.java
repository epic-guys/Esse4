/*
 * ESSE3 Questionari API
 * API REST di ESSE3 per l'accesso ai questionari
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.epic_guys.esse4.models.questionari;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;

/**
 * Domande
 */
public class Domande {
  @SerializedName("paragrafoId")
  private Integer paragrafoId = null;

  @SerializedName("domandaId")
  private Integer domandaId = null;

  @SerializedName("elemCod")
  private String elemCod = null;

  @SerializedName("elementiDes")
  private String elementiDes = null;

  @SerializedName("elementiNota")
  private String elementiNota = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("obbligatorioFlg")
  private Integer obbligatorioFlg = null;

  @SerializedName("numMaxSce")
  private Integer numMaxSce = null;

  @SerializedName("tipoFormatoCod")
  private String tipoFormatoCod = null;

  @SerializedName("rispDisponibili")
  private List<RisposteDisponibili> rispDisponibili = null;

  @SerializedName("rispComplete")
  private List<RisposteCompilate> rispComplete = null;

  public Domande paragrafoId(Integer paragrafoId) {
    this.paragrafoId = paragrafoId;
    return this;
  }

   /**
   * Get paragrafoId
   * @return paragrafoId
  **/

  public Integer getParagrafoId() {
    return paragrafoId;
  }

  public void setParagrafoId(Integer paragrafoId) {
    this.paragrafoId = paragrafoId;
  }

  public Domande domandaId(Integer domandaId) {
    this.domandaId = domandaId;
    return this;
  }

   /**
   * Get domandaId
   * @return domandaId
  **/

  public Integer getDomandaId() {
    return domandaId;
  }

  public void setDomandaId(Integer domandaId) {
    this.domandaId = domandaId;
  }

  public Domande elemCod(String elemCod) {
    this.elemCod = elemCod;
    return this;
  }

   /**
   * Get elemCod
   * @return elemCod
  **/

  public String getElemCod() {
    return elemCod;
  }

  public void setElemCod(String elemCod) {
    this.elemCod = elemCod;
  }

  public Domande elementiDes(String elementiDes) {
    this.elementiDes = elementiDes;
    return this;
  }

   /**
   * Get elementiDes
   * @return elementiDes
  **/

  public String getElementiDes() {
    return elementiDes;
  }

  public void setElementiDes(String elementiDes) {
    this.elementiDes = elementiDes;
  }

  public Domande elementiNota(String elementiNota) {
    this.elementiNota = elementiNota;
    return this;
  }

   /**
   * Get elementiNota
   * @return elementiNota
  **/

  public String getElementiNota() {
    return elementiNota;
  }

  public void setElementiNota(String elementiNota) {
    this.elementiNota = elementiNota;
  }

  public Domande note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/

  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Domande obbligatorioFlg(Integer obbligatorioFlg) {
    this.obbligatorioFlg = obbligatorioFlg;
    return this;
  }

   /**
   * Get obbligatorioFlg
   * @return obbligatorioFlg
  **/

  public Integer getObbligatorioFlg() {
    return obbligatorioFlg;
  }

  public void setObbligatorioFlg(Integer obbligatorioFlg) {
    this.obbligatorioFlg = obbligatorioFlg;
  }

  public Domande numMaxSce(Integer numMaxSce) {
    this.numMaxSce = numMaxSce;
    return this;
  }

   /**
   * Get numMaxSce
   * @return numMaxSce
  **/

  public Integer getNumMaxSce() {
    return numMaxSce;
  }

  public void setNumMaxSce(Integer numMaxSce) {
    this.numMaxSce = numMaxSce;
  }

  public Domande tipoFormatoCod(String tipoFormatoCod) {
    this.tipoFormatoCod = tipoFormatoCod;
    return this;
  }

   /**
   * Get tipoFormatoCod
   * @return tipoFormatoCod
  **/

  public String getTipoFormatoCod() {
    return tipoFormatoCod;
  }

  public void setTipoFormatoCod(String tipoFormatoCod) {
    this.tipoFormatoCod = tipoFormatoCod;
  }

  public Domande rispDisponibili(List<RisposteDisponibili> rispDisponibili) {
    this.rispDisponibili = rispDisponibili;
    return this;
  }

  public Domande addRispDisponibiliItem(RisposteDisponibili rispDisponibiliItem) {
    if (this.rispDisponibili == null) {
      this.rispDisponibili = new ArrayList<RisposteDisponibili>();
    }
    this.rispDisponibili.add(rispDisponibiliItem);
    return this;
  }

   /**
   * Get rispDisponibili
   * @return rispDisponibili
  **/

  public List<RisposteDisponibili> getRispDisponibili() {
    return rispDisponibili;
  }

  public void setRispDisponibili(List<RisposteDisponibili> rispDisponibili) {
    this.rispDisponibili = rispDisponibili;
  }

  public Domande rispComplete(List<RisposteCompilate> rispComplete) {
    this.rispComplete = rispComplete;
    return this;
  }

  public Domande addRispCompleteItem(RisposteCompilate rispCompleteItem) {
    if (this.rispComplete == null) {
      this.rispComplete = new ArrayList<RisposteCompilate>();
    }
    this.rispComplete.add(rispCompleteItem);
    return this;
  }

   /**
   * Get rispComplete
   * @return rispComplete
  **/

  public List<RisposteCompilate> getRispComplete() {
    return rispComplete;
  }

  public void setRispComplete(List<RisposteCompilate> rispComplete) {
    this.rispComplete = rispComplete;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Domande domande = (Domande) o;
    return Objects.equals(this.paragrafoId, domande.paragrafoId) &&
        Objects.equals(this.domandaId, domande.domandaId) &&
        Objects.equals(this.elemCod, domande.elemCod) &&
        Objects.equals(this.elementiDes, domande.elementiDes) &&
        Objects.equals(this.elementiNota, domande.elementiNota) &&
        Objects.equals(this.note, domande.note) &&
        Objects.equals(this.obbligatorioFlg, domande.obbligatorioFlg) &&
        Objects.equals(this.numMaxSce, domande.numMaxSce) &&
        Objects.equals(this.tipoFormatoCod, domande.tipoFormatoCod) &&
        Objects.equals(this.rispDisponibili, domande.rispDisponibili) &&
        Objects.equals(this.rispComplete, domande.rispComplete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paragrafoId, domandaId, elemCod, elementiDes, elementiNota, note, obbligatorioFlg, numMaxSce, tipoFormatoCod, rispDisponibili, rispComplete);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Domande {\n");
    
    sb.append("    paragrafoId: ").append(toIndentedString(paragrafoId)).append("\n");
    sb.append("    domandaId: ").append(toIndentedString(domandaId)).append("\n");
    sb.append("    elemCod: ").append(toIndentedString(elemCod)).append("\n");
    sb.append("    elementiDes: ").append(toIndentedString(elementiDes)).append("\n");
    sb.append("    elementiNota: ").append(toIndentedString(elementiNota)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    obbligatorioFlg: ").append(toIndentedString(obbligatorioFlg)).append("\n");
    sb.append("    numMaxSce: ").append(toIndentedString(numMaxSce)).append("\n");
    sb.append("    tipoFormatoCod: ").append(toIndentedString(tipoFormatoCod)).append("\n");
    sb.append("    rispDisponibili: ").append(toIndentedString(rispDisponibili)).append("\n");
    sb.append("    rispComplete: ").append(toIndentedString(rispComplete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

