/*
 * ESSE3 Questionari API
 * API REST di ESSE3 per l'accesso ai questionari
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.epic_guys.esse4.models.questionari;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;

/**
 * Paragrafi
 */
public class Paragrafi {
  @SerializedName("paginaId")
  private Integer paginaId = null;

  @SerializedName("paragrafoId")
  private Integer paragrafoId = null;

  @SerializedName("elemCod")
  private String elemCod = null;

  @SerializedName("elementiDes")
  private String elementiDes = null;

  @SerializedName("elementiNota")
  private String elementiNota = null;

  @SerializedName("obbligatorioFlg")
  private Integer obbligatorioFlg = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("domande")
  private List<Domande> domande = null;

  public Paragrafi paginaId(Integer paginaId) {
    this.paginaId = paginaId;
    return this;
  }

   /**
   * Get paginaId
   * @return paginaId
  **/

  public Integer getPaginaId() {
    return paginaId;
  }

  public void setPaginaId(Integer paginaId) {
    this.paginaId = paginaId;
  }

  public Paragrafi paragrafoId(Integer paragrafoId) {
    this.paragrafoId = paragrafoId;
    return this;
  }

   /**
   * Get paragrafoId
   * @return paragrafoId
  **/

  public Integer getParagrafoId() {
    return paragrafoId;
  }

  public void setParagrafoId(Integer paragrafoId) {
    this.paragrafoId = paragrafoId;
  }

  public Paragrafi elemCod(String elemCod) {
    this.elemCod = elemCod;
    return this;
  }

   /**
   * Get elemCod
   * @return elemCod
  **/

  public String getElemCod() {
    return elemCod;
  }

  public void setElemCod(String elemCod) {
    this.elemCod = elemCod;
  }

  public Paragrafi elementiDes(String elementiDes) {
    this.elementiDes = elementiDes;
    return this;
  }

   /**
   * Get elementiDes
   * @return elementiDes
  **/

  public String getElementiDes() {
    return elementiDes;
  }

  public void setElementiDes(String elementiDes) {
    this.elementiDes = elementiDes;
  }

  public Paragrafi elementiNota(String elementiNota) {
    this.elementiNota = elementiNota;
    return this;
  }

   /**
   * Get elementiNota
   * @return elementiNota
  **/

  public String getElementiNota() {
    return elementiNota;
  }

  public void setElementiNota(String elementiNota) {
    this.elementiNota = elementiNota;
  }

  public Paragrafi obbligatorioFlg(Integer obbligatorioFlg) {
    this.obbligatorioFlg = obbligatorioFlg;
    return this;
  }

   /**
   * Get obbligatorioFlg
   * @return obbligatorioFlg
  **/

  public Integer getObbligatorioFlg() {
    return obbligatorioFlg;
  }

  public void setObbligatorioFlg(Integer obbligatorioFlg) {
    this.obbligatorioFlg = obbligatorioFlg;
  }

  public Paragrafi note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/

  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public Paragrafi domande(List<Domande> domande) {
    this.domande = domande;
    return this;
  }

  public Paragrafi addDomandeItem(Domande domandeItem) {
    if (this.domande == null) {
      this.domande = new ArrayList<Domande>();
    }
    this.domande.add(domandeItem);
    return this;
  }

   /**
   * Get domande
   * @return domande
  **/

  public List<Domande> getDomande() {
    return domande;
  }

  public void setDomande(List<Domande> domande) {
    this.domande = domande;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paragrafi paragrafi = (Paragrafi) o;
    return Objects.equals(this.paginaId, paragrafi.paginaId) &&
        Objects.equals(this.paragrafoId, paragrafi.paragrafoId) &&
        Objects.equals(this.elemCod, paragrafi.elemCod) &&
        Objects.equals(this.elementiDes, paragrafi.elementiDes) &&
        Objects.equals(this.elementiNota, paragrafi.elementiNota) &&
        Objects.equals(this.obbligatorioFlg, paragrafi.obbligatorioFlg) &&
        Objects.equals(this.note, paragrafi.note) &&
        Objects.equals(this.domande, paragrafi.domande);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paginaId, paragrafoId, elemCod, elementiDes, elementiNota, obbligatorioFlg, note, domande);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paragrafi {\n");
    
    sb.append("    paginaId: ").append(toIndentedString(paginaId)).append("\n");
    sb.append("    paragrafoId: ").append(toIndentedString(paragrafoId)).append("\n");
    sb.append("    elemCod: ").append(toIndentedString(elemCod)).append("\n");
    sb.append("    elementiDes: ").append(toIndentedString(elementiDes)).append("\n");
    sb.append("    elementiNota: ").append(toIndentedString(elementiNota)).append("\n");
    sb.append("    obbligatorioFlg: ").append(toIndentedString(obbligatorioFlg)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    domande: ").append(toIndentedString(domande)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

