/*
 * ESSE3 Questionari API
 * API REST di ESSE3 per l'accesso ai questionari
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.epic_guys.esse4.models.questionari;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;

/**
 * RisposteDisponibili
 */
public class RisposteDisponibili {
  @SerializedName("domandaId")
  private Integer domandaId = null;

  @SerializedName("rispostaId")
  private Integer rispostaId = null;

  @SerializedName("elemCod")
  private String elemCod = null;

  @SerializedName("elementiDes")
  private String elementiDes = null;

  @SerializedName("elementiNota")
  private String elementiNota = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("rispostaFormatoCod")
  private String rispostaFormatoCod = null;

  @SerializedName("domandaFormatoCod")
  private String domandaFormatoCod = null;

  @SerializedName("punteggio")
  private Integer punteggio = null;

  @SerializedName("obbligatorioFlg")
  private Integer obbligatorioFlg = null;

  @SerializedName("operandoDomId")
  private Integer operandoDomId = null;

  @SerializedName("limMin")
  private Integer limMin = null;

  @SerializedName("limMax")
  private Integer limMax = null;

  @SerializedName("numMaxValori")
  private Integer numMaxValori = null;

  @SerializedName("dominioRisposte")
  private List<DominiRisposte> dominioRisposte = null;

  public RisposteDisponibili domandaId(Integer domandaId) {
    this.domandaId = domandaId;
    return this;
  }

   /**
   * Get domandaId
   * @return domandaId
  **/
  
  public Integer getDomandaId() {
    return domandaId;
  }

  public void setDomandaId(Integer domandaId) {
    this.domandaId = domandaId;
  }

  public RisposteDisponibili rispostaId(Integer rispostaId) {
    this.rispostaId = rispostaId;
    return this;
  }

   /**
   * Get rispostaId
   * @return rispostaId
  **/
  
  public Integer getRispostaId() {
    return rispostaId;
  }

  public void setRispostaId(Integer rispostaId) {
    this.rispostaId = rispostaId;
  }

  public RisposteDisponibili elemCod(String elemCod) {
    this.elemCod = elemCod;
    return this;
  }

   /**
   * Get elemCod
   * @return elemCod
  **/
  
  public String getElemCod() {
    return elemCod;
  }

  public void setElemCod(String elemCod) {
    this.elemCod = elemCod;
  }

  public RisposteDisponibili elementiDes(String elementiDes) {
    this.elementiDes = elementiDes;
    return this;
  }

   /**
   * Get elementiDes
   * @return elementiDes
  **/
  
  public String getElementiDes() {
    return elementiDes;
  }

  public void setElementiDes(String elementiDes) {
    this.elementiDes = elementiDes;
  }

  public RisposteDisponibili elementiNota(String elementiNota) {
    this.elementiNota = elementiNota;
    return this;
  }

   /**
   * Get elementiNota
   * @return elementiNota
  **/
  
  public String getElementiNota() {
    return elementiNota;
  }

  public void setElementiNota(String elementiNota) {
    this.elementiNota = elementiNota;
  }

  public RisposteDisponibili note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public RisposteDisponibili rispostaFormatoCod(String rispostaFormatoCod) {
    this.rispostaFormatoCod = rispostaFormatoCod;
    return this;
  }

   /**
   * Get rispostaFormatoCod
   * @return rispostaFormatoCod
  **/
  
  public String getRispostaFormatoCod() {
    return rispostaFormatoCod;
  }

  public void setRispostaFormatoCod(String rispostaFormatoCod) {
    this.rispostaFormatoCod = rispostaFormatoCod;
  }

  public RisposteDisponibili domandaFormatoCod(String domandaFormatoCod) {
    this.domandaFormatoCod = domandaFormatoCod;
    return this;
  }

   /**
   * Get domandaFormatoCod
   * @return domandaFormatoCod
  **/
  
  public String getDomandaFormatoCod() {
    return domandaFormatoCod;
  }

  public void setDomandaFormatoCod(String domandaFormatoCod) {
    this.domandaFormatoCod = domandaFormatoCod;
  }

  public RisposteDisponibili punteggio(Integer punteggio) {
    this.punteggio = punteggio;
    return this;
  }

   /**
   * Get punteggio
   * @return punteggio
  **/
  
  public Integer getPunteggio() {
    return punteggio;
  }

  public void setPunteggio(Integer punteggio) {
    this.punteggio = punteggio;
  }

  public RisposteDisponibili obbligatorioFlg(Integer obbligatorioFlg) {
    this.obbligatorioFlg = obbligatorioFlg;
    return this;
  }

   /**
   * Get obbligatorioFlg
   * @return obbligatorioFlg
  **/
  
  public Integer getObbligatorioFlg() {
    return obbligatorioFlg;
  }

  public void setObbligatorioFlg(Integer obbligatorioFlg) {
    this.obbligatorioFlg = obbligatorioFlg;
  }

  public RisposteDisponibili operandoDomId(Integer operandoDomId) {
    this.operandoDomId = operandoDomId;
    return this;
  }

   /**
   * l&#39;id dell&#39;operando sql che viene utilizzato per generare la lista dei valori selezionabili nella domanda ti dipo DOM_VAR
   * @return operandoDomId
  **/
  
  public Integer getOperandoDomId() {
    return operandoDomId;
  }

  public void setOperandoDomId(Integer operandoDomId) {
    this.operandoDomId = operandoDomId;
  }

  public RisposteDisponibili limMin(Integer limMin) {
    this.limMin = limMin;
    return this;
  }

   /**
   * numero minimo che si può dare a una risposta numerica
   * @return limMin
  **/
  
  public Integer getLimMin() {
    return limMin;
  }

  public void setLimMin(Integer limMin) {
    this.limMin = limMin;
  }

  public RisposteDisponibili limMax(Integer limMax) {
    this.limMax = limMax;
    return this;
  }

   /**
   * numero massimo che si può dare a una risposta numerica
   * @return limMax
  **/
  
  public Integer getLimMax() {
    return limMax;
  }

  public void setLimMax(Integer limMax) {
    this.limMax = limMax;
  }

  public RisposteDisponibili numMaxValori(Integer numMaxValori) {
    this.numMaxValori = numMaxValori;
    return this;
  }

   /**
   * numero massimo di risposte che si possono dare a una domanda con scelte multiple.
   * @return numMaxValori
  **/
  
  public Integer getNumMaxValori() {
    return numMaxValori;
  }

  public void setNumMaxValori(Integer numMaxValori) {
    this.numMaxValori = numMaxValori;
  }

  public RisposteDisponibili dominioRisposte(List<DominiRisposte> dominioRisposte) {
    this.dominioRisposte = dominioRisposte;
    return this;
  }

  public RisposteDisponibili addDominioRisposteItem(DominiRisposte dominioRisposteItem) {
    if (this.dominioRisposte == null) {
      this.dominioRisposte = new ArrayList<DominiRisposte>();
    }
    this.dominioRisposte.add(dominioRisposteItem);
    return this;
  }

   /**
   * Get dominioRisposte
   * @return dominioRisposte
  **/
  
  public List<DominiRisposte> getDominioRisposte() {
    return dominioRisposte;
  }

  public void setDominioRisposte(List<DominiRisposte> dominioRisposte) {
    this.dominioRisposte = dominioRisposte;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RisposteDisponibili risposteDisponibili = (RisposteDisponibili) o;
    return Objects.equals(this.domandaId, risposteDisponibili.domandaId) &&
        Objects.equals(this.rispostaId, risposteDisponibili.rispostaId) &&
        Objects.equals(this.elemCod, risposteDisponibili.elemCod) &&
        Objects.equals(this.elementiDes, risposteDisponibili.elementiDes) &&
        Objects.equals(this.elementiNota, risposteDisponibili.elementiNota) &&
        Objects.equals(this.note, risposteDisponibili.note) &&
        Objects.equals(this.rispostaFormatoCod, risposteDisponibili.rispostaFormatoCod) &&
        Objects.equals(this.domandaFormatoCod, risposteDisponibili.domandaFormatoCod) &&
        Objects.equals(this.punteggio, risposteDisponibili.punteggio) &&
        Objects.equals(this.obbligatorioFlg, risposteDisponibili.obbligatorioFlg) &&
        Objects.equals(this.operandoDomId, risposteDisponibili.operandoDomId) &&
        Objects.equals(this.limMin, risposteDisponibili.limMin) &&
        Objects.equals(this.limMax, risposteDisponibili.limMax) &&
        Objects.equals(this.numMaxValori, risposteDisponibili.numMaxValori) &&
        Objects.equals(this.dominioRisposte, risposteDisponibili.dominioRisposte);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domandaId, rispostaId, elemCod, elementiDes, elementiNota, note, rispostaFormatoCod, domandaFormatoCod, punteggio, obbligatorioFlg, operandoDomId, limMin, limMax, numMaxValori, dominioRisposte);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RisposteDisponibili {\n");
    
    sb.append("    domandaId: ").append(toIndentedString(domandaId)).append("\n");
    sb.append("    rispostaId: ").append(toIndentedString(rispostaId)).append("\n");
    sb.append("    elemCod: ").append(toIndentedString(elemCod)).append("\n");
    sb.append("    elementiDes: ").append(toIndentedString(elementiDes)).append("\n");
    sb.append("    elementiNota: ").append(toIndentedString(elementiNota)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    rispostaFormatoCod: ").append(toIndentedString(rispostaFormatoCod)).append("\n");
    sb.append("    domandaFormatoCod: ").append(toIndentedString(domandaFormatoCod)).append("\n");
    sb.append("    punteggio: ").append(toIndentedString(punteggio)).append("\n");
    sb.append("    obbligatorioFlg: ").append(toIndentedString(obbligatorioFlg)).append("\n");
    sb.append("    operandoDomId: ").append(toIndentedString(operandoDomId)).append("\n");
    sb.append("    limMin: ").append(toIndentedString(limMin)).append("\n");
    sb.append("    limMax: ").append(toIndentedString(limMax)).append("\n");
    sb.append("    numMaxValori: ").append(toIndentedString(numMaxValori)).append("\n");
    sb.append("    dominioRisposte: ").append(toIndentedString(dominioRisposte)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

